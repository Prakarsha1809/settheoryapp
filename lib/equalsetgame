import 'package:flutter/material.dart';

class EqualSetGamePage extends StatefulWidget {
  const EqualSetGamePage({super.key});

  @override
  _EqualSetGamePageState createState() => _EqualSetGamePageState();
}

class _EqualSetGamePageState extends State<EqualSetGamePage> {
  List<String> setA = ['1', '2', '3', '4'];
  List<String> setB = ['4', '3', '2', '1'];

  List<String> userSelection = [];

  bool isGameWon = false;

  void checkEqualSets() {
    setState(() {
      isGameWon = (setA.toSet().difference(userSelection.toSet()).isEmpty &&
          userSelection.toSet().difference(setA.toSet()).isEmpty);
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Equal Set Game"),
        backgroundColor: const Color(0xFF8dd0f0), // Light blue background color
      ),
      body: Container(
        color: const Color(0xFF8dd0f0), // Light blue background color
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            const SizedBox(height: 20),
            const Text(
              "Select the elements that belong to Set A to verify if Set B is equal to Set A.",
              style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            Wrap(
              spacing: 8.0,
              children: setA.map((element) {
                return ChoiceChip(
                  label: Text(element),
                  selected: userSelection.contains(element),
                  onSelected: (bool selected) {
                    setState(() {
                      if (selected) {
                        userSelection.add(element);
                      } else {
                        userSelection.remove(element);
                      }
                      checkEqualSets();
                    });
                  },
                );
              }).toList(),
            ),
            const SizedBox(height: 40),
            Wrap(
              spacing: 8.0,
              children: setB.map((element) {
                return Chip(
                  label: Text(element),
                  backgroundColor: Colors.lightGreenAccent,
                );
              }).toList(),
            ),
            const SizedBox(height: 40),
            Text(
              isGameWon
                  ? "Congratulations! Set A and Set B are equal!"
                  : "Keep trying! Set A and Set B are not equal yet.",
              style: TextStyle(
                fontSize: 24,
                color: isGameWon ? Colors.green : Colors.red,
              ),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                setState(() {
                  userSelection.clear();
                  isGameWon = false;
                });
              },
              child: const Text("Reset Game"),
            ),
          ],
        ),
      ),
    );
  }
}
